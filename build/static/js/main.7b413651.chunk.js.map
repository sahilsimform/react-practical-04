{"version":3,"sources":["components/Todo.js","components/Time.js","App.js","reportWebVitals.js","index.js"],"names":["schedule","require","getLocalItems","localStorage","getItem","JSON","parse","Todo","_useState","useState","_useState2","Object","slicedToArray","inputData","setInputData","_useState3","_useState4","items","setItems","_useState5","_useState6","toggleSubmit","setToggleSubmit","_useState7","_useState8","isEditItem","setIsEditItem","_useState9","_useState10","toggleBtn","setToggleBtn","completeTodo","id","updatedTodos","map","elem","isComplete","addItem","objectSpread","name","allInputData","Date","getTime","toString","concat","toConsumableArray","alert","useEffect","setItem","stringify","scheduleJob","react_default","a","createElement","Fragment","className","key","onDoubleClick","index","updatedItems","filter","deleteItem","onClick","newEditItem","find","editItem","index_esm","type","placeholder","value","onChange","e","target","onKeyUp","event","title","Time","d","year1","Intl","DateTimeFormat","year","format","month1","month","day1","day","week1","weekday","App","components_Time","components_Todo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b413651.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FiCheckCircle, FiCircle } from \"react-icons/fi\";\nimport \"./Todo.css\";\n\nconst schedule = require(\"node-schedule\");\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem(\"TodoList\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"TodoList\"));\n  } else {\n    return [];\n  }\n};\n\nfunction Todo() {\n  const [inputData, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getLocalItems());\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [toggleBtn, setToggleBtn] = useState(false);\n\n  const completeTodo = (id) => {\n    let updatedTodos = items.map((elem) => {\n      if (elem.id === id) {\n        elem.isComplete = !elem.isComplete;\n      }\n      return elem;\n    });\n    setItems(updatedTodos);\n  };\n\n  const addItem = () => {\n    if (!inputData) {\n      alert(\"Please Enter a Data.\");\n    } else if (inputData && !toggleSubmit) {\n      setItems(\n        items.map((elem) => {\n          if (elem.id === isEditItem) {\n            return { ...elem, name: inputData };\n          }\n          return elem;\n        })\n      );\n      setToggleSubmit(true);\n      setInputData(\"\");\n      setIsEditItem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData,\n      };\n      setItems([...items, allInputData]);\n      setInputData(\"\");\n    }\n  };\n\n  const deleteItem = (index) => {\n    const updatedItems = items.filter((elem) => {\n      return index !== elem.id;\n    });\n    setItems(updatedItems);\n    setInputData(\"\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"TodoList\", JSON.stringify(items));\n  }, [items]);\n\n  const editItem = (id) => {\n    let newEditItem = items.find((elem) => {\n      return elem.id === id;\n    });\n    setToggleSubmit(false);\n    setInputData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  schedule.scheduleJob(\"0 0 * * *\", () => {\n    setItems([]);\n  });\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      addItem();\n    } else if (event.key === \"Escape\") {\n      setToggleBtn(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container \">\n        <div className=\"showItems\">\n          {items.map((elem) => {\n            return (\n              <div className=\"eachItem\" key={elem.id}>\n                <div className=\"row\">\n                  <div className=\"mt-2 col dis_main\">\n                    <span onDoubleClick={() => deleteItem(elem.id)}>\n                      <h3\n                        onClick={() => editItem(elem.id)}\n                        className={\n                          elem.isComplete ? \"todo-row complete\" : \"todo-row\"\n                        }\n                      >\n                        {elem.name}\n                      </h3>\n                    </span>\n                  </div>\n                  <div className=\"col icon_btn\">\n                    <div>\n                      {elem.isComplete ? (\n                        <FiCheckCircle\n                          key={elem.id}\n                          className=\"icon checkIcon\"\n                          onClick={() => completeTodo(elem.id)}\n                        />\n                      ) : (\n                        <FiCircle\n                          key={elem.id}\n                          className=\"icon\"\n                          onClick={() => completeTodo(elem.id)}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"addItems mt-4\">\n          {toggleBtn ? (\n            <>\n              <div className=\"Input_Text\">\n                <input\n                  type=\"text\"\n                  className=\"textArea\"\n                  placeholder=\"Add Items to Add to the Todo..\"\n                  value={inputData}\n                  onChange={(e) => setInputData(e.target.value)}\n                  onKeyUp={handleKeyDown}\n                />\n\n                <button className=\"btnAdd\" onClick={addItem}>\n                  <i className=\"fas fa-check add-btn\" title=\"Update Item\">\n                    Update/Add\n                  </i>\n                </button>\n              </div>\n            </>\n          ) : (\n            <div className=\"btn_div\">\n              <button\n                onClick={() => setToggleBtn(true)}\n                className=\"Add_btn_main\"\n              >\n                <b>+</b>\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport \"./Time.css\";\n\nfunction Time() {\n  const d = new Date();\n\n  let year1 = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n  let month1 = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(d);\n  let day1 = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n  let week1 = new Intl.DateTimeFormat(\"en\", { weekday: \"long\" }).format(d);\n\n  return (\n    <>\n      <div className=\"container mt-4\">\n        <div className=\"time_div row  justify-content-md-center\">\n          <div className=\"time_div_date col\">\n            <h1 className=\"date_h1\">{day1}</h1>\n          </div>\n          <div className=\"time_div_month col float-left\">\n            <h4 className=\"month_h4\">{month1}</h4>\n            <h4 className=\"year_h4\">{year1}</h4>\n          </div>\n          <div className=\"time_div_day col \">\n            <h4 className=\"day_h4\">{week1}</h4>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Time;\n","import React from \"react\";\nimport \"./App.css\";\nimport Todo from \"./components/Todo\";\nimport Time from \"./components/Time\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\" App_div \">\n          <Time />\n          <Todo />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}